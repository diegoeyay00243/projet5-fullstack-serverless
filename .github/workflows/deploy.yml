name: Terraform CI/CD (plan for PRs, apply for main)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    # Variables d'environnement globales au job
    env:
      AWS_REGION: us-east-1

      # === Ã‰tape 2 : passage des variables Terraform via TF_VAR_* ===
      # LAMBDA_ZIP_PATH peut venir d'une variable OU d'un secret.
      TF_VAR_lambda_zip_path: ${{ vars.LAMBDA_ZIP_PATH || secrets.LAMBDA_ZIP_PATH }}
      TF_VAR_email_sender:   ${{ secrets.EMAIL_SENDER }}
      TF_VAR_email_password: ${{ secrets.EMAIL_PASSWORD }}
      TF_VAR_email_receiver: ${{ secrets.EMAIL_RECEIVER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (PR)
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color

      - name: Terraform apply (main)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
